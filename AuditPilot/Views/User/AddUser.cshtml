@model SCardApp.Models.UserModel


@using (Html.BeginForm()) 
{
    //@Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Add User</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Pcode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Pcode, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
            @Html.ValidationMessageFor(model => model.Pcode, "", new { @class = "text-danger" })
        </div>
    </div>
    @if (Session["causerinfo"] == null)
    {
        <div class="form-group">
            @Html.LabelFor(model => model.CompanyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @*@Html.EditorFor(model => model.DeptId, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(o => o.CompanyId,
          new SelectList(ViewBag.ListDepts, "CompanyId", "CompanyName"),"Select Company" ,new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @*@Html.EditorFor(model => model.RoleId, new { htmlAttributes = new { @class = "form-control" } })*@
            @*@Html.DropDownList("ListItem")*@
            @Html.DropDownListFor(o => o.RoleId,
        new SelectList(ViewBag.ListRoles, "RoleId", "RoleName"), "Select Role" ,new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @Html.EditorFor(model => model.DisplayName, new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MgrId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @* @Html.EditorFor(model => model.MgrId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(m => m.MgrId,
    new SelectList(ViewBag.MgrList, "USerId", "DisplayName"),"Select Manager" ,new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.MgrId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @*@Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control" } })*@
            <input type="date" name="Dob" id="Dob" class="form-control" />
            @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @*@Html.EditorFor(model => model.DeptId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(o => o.Country,
      new SelectList(ViewBag.Countries, "Country", "Country"),"Select Country" ,new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @*@Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })*@
            <input type="date" name="StartDate" id="StartDate" class="form-control" />
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @*@Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })*@
            <input type="date" name="EndDate" id="EndDate" class="form-control" />
            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
            <select name="Gender" id="Gender">
                <option value="" selected>Select Gender</option>
                <option value="Male">Male</option>
                <option value="Female">Female</option>
                <option value="Others">Others</option>
            </select>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" style="background-color: #90c1b8 !important;" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10" style="color:green">
            @ViewBag.Message

        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "GetAllUserDetails")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
